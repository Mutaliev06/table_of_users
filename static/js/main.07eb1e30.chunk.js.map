{"version":3,"sources":["redux/users.js","components/Preloader.jsx","components/TableHead.jsx","components/TableRowWithInputs.jsx","components/TableRowReadOnly.jsx","components/TableRow.jsx","components/App.jsx","redux/configureStore.js","index.jsx"],"names":["initialState","loading","deleting","editing","items","editUser","userId","data","dispatch","a","type","fetch","method","body","JSON","stringify","headers","payload","Preloader","className","TableHead","TableRowWithInputs","setIsEditing","user","useDispatch","useSelector","state","useState","name","setName","email","setEmail","phone","setPhone","handleEdit","id","value","onChange","e","target","onClick","disabled","TableRowReadOnly","TableRow","isEditing","App","users","useEffect","response","json","map","length","logger","createLogger","collapsed","diff","store","createStore","action","filter","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.07eb1e30.chunk.js","sourcesContent":["const initialState = {\n  loading: false,\n  deleting: false,\n  editing: false,\n\n  items: [],\n};\n\nexport const users = (state = initialState, action) => {\n  switch (action.type) {\n    case \"users/load/pending\":\n      return {\n        ...state,\n        loading: true,\n      };\n\n    case \"users/load/fulfilled\":\n      return {\n        ...state,\n        loading: false,\n        items: action.payload,\n      };\n\n    case \"users/delete/pending\":\n      return {\n        ...state,\n        deleting: true,\n      };\n\n    case \"users/delete/fulfilled\":\n      return {\n        ...state,\n        deleting: false,\n        items: state.items.filter((user) => user.id !== action.payload),\n      };\n\n    case \"users/edit/pending\":\n      return {\n        ...state,\n        editing: true,\n      };\n\n    case \"users/edit/fulfilled\":\n      return {\n        ...state,\n        editing: false,\n        items: state.items.map((user) => {\n          if (user.id === action.payload.userId) {\n            return {\n              ...user,\n              ...action.payload.data,\n            };\n          }\n          return user;\n        }),\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const loadUsers = () => {\n  return async (dispatch) => {\n    dispatch({ type: \"users/load/pending\" });\n\n    const response = await fetch(\"https://jsonplaceholder.typicode.com/users\");\n    const json = await response.json();\n\n    dispatch({ type: \"users/load/fulfilled\", payload: json });\n  };\n};\n\nexport const deleteUser = (userId) => {\n  return async (dispatch) => {\n    dispatch({ type: \"users/delete/pending\" });\n\n    await fetch(`https://jsonplaceholder.typicode.com/users/${userId}`, {\n      method: \"DELETE\",\n    });\n\n    dispatch({ type: \"users/delete/fulfilled\", payload: userId });\n  };\n};\n\nexport const editUser = (userId, data) => {\n  return async (dispatch) => {\n    dispatch({ type: \"users/edit/pending\" });\n\n    await fetch(`https://jsonplaceholder.typicode.com/users/${userId}`, {\n      method: \"PATCH\",\n      body: JSON.stringify(data),\n      headers: {\n        \"Content-type\": \"application/json; charset=UTF-8\",\n      },\n    });\n\n    dispatch({ type: \"users/edit/fulfilled\", payload: { userId, data } });\n  };\n};\n","function Preloader() {\n  return <div className=\"alert alert-info\">Идет загрузка</div>;\n}\n\nexport default Preloader;\n","function TableHead() {\n  return (\n    <thead>\n      <tr>\n        <th>ID</th>\n        <th>name</th>\n        <th>email</th>\n        <th>phone</th>\n        <th></th>\n      </tr>\n    </thead>\n  );\n}\n\nexport default TableHead;\n","import { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { editUser } from \"../redux/users\";\n\nfunction TableRowWithInputs({ setIsEditing, user }) {\n  const dispatch = useDispatch();\n\n  const editing = useSelector((state) => state.editing);\n\n  const [name, setName] = useState(user.name);\n  const [email, setEmail] = useState(user.email);\n  const [phone, setPhone] = useState(user.phone);\n\n  const handleEdit = async () => {\n    await dispatch(editUser(user.id, { name, email, phone }));\n    setIsEditing(false);\n  };\n\n  const handleChangeName = (e) => {\n    setName(e.target.value);\n  };\n\n  const handleChangeEmail = (e) => {\n    setEmail(e.target.value);\n  };\n\n  const handleChangePhone = (e) => {\n    setPhone(e.target.value);\n  };\n\n  return (\n    <tr>\n      <td>{user.id}</td>\n      <td>\n        <input\n          className=\"form-control\"\n          type=\"text\"\n          value={name}\n          onChange={handleChangeName}\n        />\n      </td>\n      <td>\n        <input\n          className=\"form-control\"\n          type=\"text\"\n          value={email}\n          onChange={handleChangeEmail}\n        />\n      </td>\n      <td>\n        <input\n          className=\"form-control\"\n          type=\"text\"\n          value={phone}\n          onChange={handleChangePhone}\n        />\n      </td>\n      <td>\n        <button\n          className=\"btn btn-outline-primary\"\n          onClick={handleEdit}\n          disabled={editing}\n        >\n          save\n        </button>{\" \"}\n        <button\n          className=\"btn btn-outline-light\"\n          onClick={() => setIsEditing(false)}\n          disabled={editing}\n        >\n          ↩\n        </button>\n      </td>\n    </tr>\n  );\n}\n\nexport default TableRowWithInputs;\n","import { useDispatch, useSelector } from \"react-redux\";\nimport { deleteUser } from \"../redux/users\";\n\nfunction TableRowReadOnly({ setIsEditing, user }) {\n  const dispatch = useDispatch();\n\n  const deleting = useSelector((state) => state.deleting);\n\n  return (\n    <tr>\n      <td>{user.id}</td>\n      <td>{user.name}</td>\n      <td>{user.email}</td>\n      <td>{user.phone}</td>\n      <td>\n        <button\n          className=\"btn btn-outline-primary\"\n          onClick={() => setIsEditing(true)}\n        >\n          ✎\n        </button>{\" \"}\n        <button\n          className=\"btn btn-outline-danger\"\n          onClick={() => dispatch(deleteUser(user.id))}\n          disabled={deleting}\n        >\n          ␡\n        </button>\n      </td>\n    </tr>\n  );\n}\n\nexport default TableRowReadOnly;\n","import { useState } from \"react\";\nimport TableRowWithInputs from \"./TableRowWithInputs\";\nimport TableRowReadOnly from \"./TableRowReadOnly\";\n\nfunction TableRow({ user }) {\n  const [isEditing, setIsEditing] = useState(false);\n\n  return isEditing ? (\n    <TableRowWithInputs setIsEditing={setIsEditing} user={user} />\n  ) : (\n    <TableRowReadOnly setIsEditing={setIsEditing} user={user} />\n  );\n}\n\nexport default TableRow;\n","import { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { loadUsers } from \"../redux/users\";\nimport Preloader from \"./Preloader\";\nimport TableHead from \"./TableHead\";\nimport TableRow from \"./TableRow\";\n\nfunction App() {\n  const dispatch = useDispatch();\n\n  const loading = useSelector((state) => state.loading);\n  const users = useSelector((state) => state.items);\n\n  useEffect(() => dispatch(loadUsers()), [dispatch]);\n\n  if (loading) {\n    return <Preloader />;\n  }\n\n  return (\n    <>\n      <table className=\"table\">\n        <TableHead />\n        <tbody>\n        {users.map((user) => {\n          return <TableRow user={user} key={user.id} />;\n        })}\n        </tbody>\n      </table>\n      <h4>\n        Количество пользователей: {users.length}\n      </h4>\n    </>\n  );\n}\n\nexport default App;\n","import { applyMiddleware, createStore } from \"redux\";\nimport { createLogger } from \"redux-logger\";\nimport thunk from \"redux-thunk\";\nimport { users } from \"./users\";\n\nconst logger = createLogger({\n  collapsed: true,\n  diff: true,\n});\n\nexport const store = createStore(users, applyMiddleware(thunk, logger));\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport App from \"./components/App\";\nimport { store } from \"./redux/configureStore\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <div className=\"container\">\n        <App />\n      </div>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}